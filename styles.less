/*
* Your Stylesheet
*
* This stylesheet is loaded when Atom starts up and is reloaded automatically
* when it is changed and saved.
*
* Add your own CSS or Less to fully customize Atom.
*/

@color-green: #00FF00;
@color-green-dark: #009900;
@color-green-hakr: #00B500;

@color-black: #000000;
@color-black-lite: #111111;
@color-gray-30: #333333;
@color-gray-40: #444444;
@color-gray-70: #AAAAAA;
@color-gray-80: #DDDDDD;
@color-gray-90: #EEEEEE;

@color-red: #FF0000;

@color-yellow-hakr: #FAD700;

.sharp-corner {
	border-radius: 0 !important;
}
.bg-black {
	background-color: @color-black;
}



atom-workspace {
	font-family:"sfmono-regular";
	color: @color-green-hakr;
	.bg-black;

	button {
		border-radius: 0 !important;
		border-width: 0 !important;
		color: @color-green-hakr !important;
	}

	input {
		border-radius: 0 !important;
	}
}

atom-text-editor {
	color: @color-green-hakr;
	.bg-black;
	.cursor {
		border-color: @color-red;
		border-width: 1px;
	}
	.gutter {
		width: 80px;
		.bg-black;
		.line-numbers  { // This line need to be kept for showing current line background.
			.line-number {
				color: @color-gray-40;
				width: 80px;
			}
		}
	}
}

atom-text-editor {
	.syntax--comment {
		color: #333333;
		font-weight: normal;
		font-style: normal;

		&.syntax--markup {

		}
		&.syntax--link {
			font-style: normal;
		}
	}
	.syntax--keyword {
		color: @color-red;

		.syntax--control {

		}
		.syntax--operator {
		}
		.syntax--other {
			.syntax--special-method {
			}
			.syntax--unit {

			}
		}
	}
	.syntax--entity {
		color: @color-green-dark;

		&.syntax--type {
			color: @color-red;
		}
		&.syntax--inherited-class {

		}
		&.syntax--name {
			color: @color-green-dark;

			&.syntax--tag {
				color: @color-green-dark;
			}
		}
		&.syntax--other {
			&.syntax--attribute-name {
				color: @color-green-hakr;

				&.syntax--id {

				}
			}
		}
	}
	.syntax--constant {
		color: @color-green-hakr;

		&.syntax--variable {
			color: white;
		}
		&.syntax--character {
			.syntax--escape {
			}
		}
		&.syntax--numeric {

		}
		&.syntax--other {
			&.syntax--color {

			}
			&.syntax--symbol {

			}
		}
	}

	.syntax--variable {
		color: gray;

		&.syntax--paramerter {
			color: blue;
		}
		&.syntax--interpolation {

		}
	}
	.syntax--function {
		color: @color-green-dark;
	}
	.syntax--definition {
	}
	.syntax--storage {
		color: @color-red;
		&.syntax--type {

		}
		&.syntax--modifier {
			&.syntax--package {

			}
			&.syntax--import {

			}
		}
	}
	.syntax--require {
		color: @color-green-dark;
	}
	.syntax--punctuation {
		color: @color-green-dark;
	}
	.syntax--string {
		color: #AAAAAA;
	}
	.syntax--tag {
		color: @color-green-dark;
	}
	.syntax--selectr {
		color: #FAD700;
	}
	.syntax--section {

	}
	.syntax--markup {
		color: gray;
	}
	.syntax--quote {
	}
	.syntax--support {
		color: gray;
	}
}

.syntax--source.syntax--css {
	.syntax--property-name,
	.syntax--property-value {
		//   color: blue;
		&.syntax--support {
			color: #AAAAAA;
		}
	}
}

.syntax--source.syntax--js {
	.syntax--keyword.syntax--operator {
		color: white;

		&.syntax--delete,
		&.syntax--in,
		&.syntax--of,
		&.syntax--instanceof,
		&.syntax--new,
		&.syntax--typeof,
		&.syntax--void {
			color: @color-red;
		}
	}
}

.tree-view::before {
	color: @color-green-hakr;
}

.tree-view {
	.project-root {

	}
	.name {
		font-family:"sfmono-regular";
		color: @color-green-hakr;
		&:hover {
			color: @color-red;
		}
	}
	.header {
		color: @color-green-hakr;
	}
	// border-right: 1px solid #00B500;
	.bg-black;

	.selected:before {
		background-color: @color-black-lite;
	}
}

.tab-bar {
	.bg-black;

	// Tab ----------------------
	.tab {
		color: @color-green-hakr;
		.bg-black;
		&.active {
			.title {
				color: @color-black;
			}
			background-color: @color-green-hakr !important;
		}
		&:hover {
			color: @color-red;
		}

		.title {
			text-align: left;
		}
		.close-icon {
			border-radius: 20px;
			&:hover {
				color: black;
				background-color: @color-red;
			}
			&:active {
				background-color: @color-green-hakr;
				color: black;
			}
		}
	}
}


.scrollbars-visible-when-scrolling ::-webkit-scrollbar {
	width: 5px;
	height: 5px;
	.bg-black;

	&-track {
		border: 0px;
		border-radius: 0px;
		background-color: @color-black !important;
	}

	&-thumb {
		background-color: @color-green-dark !important;
		border: 0px;
		border-radius: 0px;

		&:hover {
			background-color: @color-green-hakr !important;
		}

		&:window-inactive {
		}
	}

	&-corner {
	}
}

//My awesome tab
// .tab-bar .tab.active[data-type="TextEditor"]::after {
// .bg-black;
// border-bottom: whiTe;
// }

// .tab-bar .tab.active[data-type$="Editor"] .title {
//  .bg-black;
//  z-index: 2;
//  }

.status-bar {
	color: black;
	background-color: @color-green-hakr;
	font-family:"sfmono-regular";

	.inline-block {
		color: black;
		&:hover {
			color: @color-red;
			text-decoration: none;
		}
	}
	a {
		color: black;
		&:hover {
			color: @color-red;
			text-decoration: none;
		}
	}
}


atom-panel {
	//	border: 1px solid #00B500;
	background-color: @color-green-hakr;
}

atom-pane {
	//	border: 1px solid #00B500;
	background-color: @color-green-hakr;
}


// atom-text-editor ::-webkit-scrollbar {
//   &-track { background-color: blue !important;}
//   &-corner { background-color: initial !important;}
//   &-thumb {
//     background-color: green !important;
//     border-color: transparent !important;
//   }
//  }
