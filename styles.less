/*
* Your Stylesheet
*
* This stylesheet is loaded when Atom starts up and is reloaded automatically
* when it is changed and saved.
*
* Add your own CSS or Less to fully customize Atom.
* If you are unfamiliar with Less, you can read more about it here:
* http://lesscss.org
*/

atom-workspace {
	font-family:"sfmono-regular";
	color: #00B500;
	background-color: black;

	button {
		border-radius: 0 !important;
		border-width:0 !important;
		color: #00B500 !important;
	}

	input {
		border-radius: 0 !important;
	}
}

atom-text-editor {
	color: #00B500;
	background-color: black;
	.cursor {
		border-color: red;
		border-width: 1px;
	}
	.gutter {
		width: 80px;
		background-color: black;
		.line-numbers  { // This line need to be kept for showing current line background.
			.line-number {
				color: #444444;
				width: 80px;
			}
		}
	}
}

.syntax--source.syntax--ini {
	.syntax--keyword.syntax--other.syntax--definition.syntax--ini {
		color: blue;
	}
}

atom-text-editor::shadow {
	.comment {
		color: #333333;
		font-weight: normal;
		font-style: normal;
		.markup {

		}
		.link {
			font-style: normal;
		}
	}
	.keyword {
		color: red;
		.control {

		}
		.operator {
		}
		.other {
			.special-method {
			}
			.unit {

			}
		}
	}
	.entity {
		color: green;
		&.type {
			color: red;
		}
		&.inherited-class {

		}
		&.name {
			color: green;
			&.tag {
				color: green;
			}
		}
		&.other {
			&.attribute-name {
				color: #00B500;
				&.id {

				}
			}
		}
	}
	.constant {
		color: #00B500;

		.variable {
			color: white;
		}h
		.character {
			escape {
			}
		}
		.numeric {

		}
		.other {
			.color {

			}
			.symbol {

			}
		}
	}

	.variable {
		color: gray;

		.paramerter {
			color: blue;
		}
		.interpolation {

		}
	}
	.function {
		color: green;
	}
	.definition {
	}
	.storage {
		color: red;
		.type {

		}
		.modifier {
			.package {

			}
			.import {

			}
		}
	}
	.require {
		color: green;
	}
	.punctuation {
		color: green;
	}
	.string {
		color: #AAAAAA;
	}
	.tag {
		color: green;
	}
	.selectr {
		color: #FAD700;
	}
	.section {

	}
	.markup {
		color: gray;
	}
	.quote {
	}
	.support {
		color: gray;
	}
}

.syntax--source.syntax--css {
	.syntax--property-name,
	.syntax--property-value {
		//   color: blue;
		&.syntax--support {
			color: #AAAAAA;
		}
	}
}

.syntax--source.syntax--js {
	.syntax--keyword.syntax--operator {
		color: white;

		// keywords are definded in https://github.com/atom/language-javascript/blob/master/grammars/javascript.cson
		// search "instanceof" for location
		&.syntax--delete,
		&.syntax--in,
		&.syntax--of,
		&.syntax--instanceof,
		&.syntax--new,
		&.syntax--typeof,
		&.syntax--void {
			color: red;
		}
	}
}

.tree-view::before {
	color: #00B500;
}

.tree-view {
	.name {
		font-family:"sfmono-regular";
		color: #00B500;
		&:hover {
			color: red;
		}
	}
	border-right: 1px solid #00B500;
	background-color: black;

	.selected:before {
	}
}

.tab-bar {
	background-color: black;

	// Tab ----------------------
	.tab {
		color: #00B500;
		background-color: black;
		&.active {
			.title {
				color: white;
			}
			background-color: black;
		}
		&:hover {
			color: red;
		}

		.title {
			text-align: left;
		}
		.close-icon {
			border-radius: 20px;
			&:hover {
				color: black;
				background-color: red;
			}
			&:active {
				background-color: #00B500;
				color: black;
			}
		}
	}
}

//My awesome tab
// .tab-bar .tab.active[data-type="TextEditor"]::after {
// background-color: black;
// border-bottom: whiTe;
// }

// .tab-bar .tab.active[data-type$="Editor"] .title {
//  background-color: black;
//  z-index: 2;
//  }

.status-bar {
	color: black;
	background-color: #00B500;
	font-family:"sfmono-regular";

	.inline-block {
		color: black;
		&:hover {
			color: red;
			text-decoration: none;
		}
	}
	a {
		color: black;
		&:hover {
			color: red;
			text-decoration: none;
		}
	}
}


atom-panel {
	//	border: 1px solid #00B500;
	background-color: #00B500;
}

atom-pane {
	//	border: 1px solid #00B500;
	background-color: #00B500;
}
